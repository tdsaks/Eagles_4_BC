{"ast":null,"code":"'use strict';\n\nvar invalidPrototcolRegex = /^(%20|\\s)*(javascript|data)/im;\nvar ctrlCharactersRegex = /[^\\x20-\\x7EÀ-ž]/gmi;\nvar urlSchemeRegex = /^([^:]+):/gm;\nvar relativeFirstCharacters = ['.', '/'];\n\nfunction isRelativeUrlWithoutProtocol(url) {\n  return relativeFirstCharacters.indexOf(url[0]) > -1;\n}\n\nfunction sanitizeUrl(url) {\n  var urlScheme, urlSchemeParseResults, sanitizedUrl;\n\n  if (!url) {\n    return 'about:blank';\n  }\n\n  sanitizedUrl = url.replace(ctrlCharactersRegex, '').trim();\n\n  if (isRelativeUrlWithoutProtocol(sanitizedUrl)) {\n    return sanitizedUrl;\n  }\n\n  urlSchemeParseResults = sanitizedUrl.match(urlSchemeRegex);\n\n  if (!urlSchemeParseResults) {\n    return sanitizedUrl;\n  }\n\n  urlScheme = urlSchemeParseResults[0];\n\n  if (invalidPrototcolRegex.test(urlScheme)) {\n    return 'about:blank';\n  }\n\n  return sanitizedUrl;\n}\n\nmodule.exports = {\n  sanitizeUrl: sanitizeUrl\n};","map":{"version":3,"sources":["/Users/tommysuh/Desktop/WebDeisgn/creative-project-adam-esther-tommy/node_modules/@braintree/sanitize-url/index.js"],"names":["invalidPrototcolRegex","ctrlCharactersRegex","urlSchemeRegex","relativeFirstCharacters","isRelativeUrlWithoutProtocol","url","indexOf","sanitizeUrl","urlScheme","urlSchemeParseResults","sanitizedUrl","replace","trim","match","test","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,qBAAqB,GAAG,+BAA5B;AACA,IAAIC,mBAAmB,GAAG,oBAA1B;AACA,IAAIC,cAAc,GAAG,aAArB;AACA,IAAIC,uBAAuB,GAAG,CAAC,GAAD,EAAM,GAAN,CAA9B;;AAEA,SAASC,4BAAT,CAAsCC,GAAtC,EAA2C;AACzC,SAAOF,uBAAuB,CAACG,OAAxB,CAAgCD,GAAG,CAAC,CAAD,CAAnC,IAA0C,CAAC,CAAlD;AACD;;AAED,SAASE,WAAT,CAAqBF,GAArB,EAA0B;AACxB,MAAIG,SAAJ,EAAeC,qBAAf,EAAsCC,YAAtC;;AAEA,MAAI,CAACL,GAAL,EAAU;AACR,WAAO,aAAP;AACD;;AAEDK,EAAAA,YAAY,GAAGL,GAAG,CAACM,OAAJ,CAAYV,mBAAZ,EAAiC,EAAjC,EAAqCW,IAArC,EAAf;;AAEA,MAAIR,4BAA4B,CAACM,YAAD,CAAhC,EAAgD;AAC9C,WAAOA,YAAP;AACD;;AAEDD,EAAAA,qBAAqB,GAAGC,YAAY,CAACG,KAAb,CAAmBX,cAAnB,CAAxB;;AAEA,MAAI,CAACO,qBAAL,EAA4B;AAC1B,WAAOC,YAAP;AACD;;AAEDF,EAAAA,SAAS,GAAGC,qBAAqB,CAAC,CAAD,CAAjC;;AAEA,MAAIT,qBAAqB,CAACc,IAAtB,CAA2BN,SAA3B,CAAJ,EAA2C;AACzC,WAAO,aAAP;AACD;;AAED,SAAOE,YAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiB;AACfT,EAAAA,WAAW,EAAEA;AADE,CAAjB","sourcesContent":["'use strict';\n\nvar invalidPrototcolRegex = /^(%20|\\s)*(javascript|data)/im;\nvar ctrlCharactersRegex = /[^\\x20-\\x7EÀ-ž]/gmi;\nvar urlSchemeRegex = /^([^:]+):/gm;\nvar relativeFirstCharacters = ['.', '/'];\n\nfunction isRelativeUrlWithoutProtocol(url) {\n  return relativeFirstCharacters.indexOf(url[0]) > -1;\n}\n\nfunction sanitizeUrl(url) {\n  var urlScheme, urlSchemeParseResults, sanitizedUrl;\n\n  if (!url) {\n    return 'about:blank';\n  }\n\n  sanitizedUrl = url.replace(ctrlCharactersRegex, '').trim();\n\n  if (isRelativeUrlWithoutProtocol(sanitizedUrl)) {\n    return sanitizedUrl;\n  }\n\n  urlSchemeParseResults = sanitizedUrl.match(urlSchemeRegex);\n\n  if (!urlSchemeParseResults) {\n    return sanitizedUrl;\n  }\n\n  urlScheme = urlSchemeParseResults[0];\n\n  if (invalidPrototcolRegex.test(urlScheme)) {\n    return 'about:blank';\n  }\n\n  return sanitizedUrl;\n}\n\nmodule.exports = {\n  sanitizeUrl: sanitizeUrl\n};\n"]},"metadata":{},"sourceType":"script"}