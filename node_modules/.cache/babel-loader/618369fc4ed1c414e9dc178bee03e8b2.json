{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar separate_1 = require(\"../separate/separate\");\n\nvar identify_1 = require(\"./identify\");\n\nvar separate_2 = require(\"../separate/separate\");\n\nfunction default_1(str, options) {\n  var arr = separate_2.separate(str);\n  var identified = identify_1.default(arr, options); // custom filtering-out function\n\n  if (options.exclude) {\n    for (var index = 0; index < identified.length; index++) {\n      var element = identified[index];\n      if (typeof element === \"object\" && options.exclude(element)) identified[index] = element.raw;\n    }\n  } // return the current list (with words being filtered out)\n\n\n  if (options.list) {\n    var listed = [];\n\n    for (var i = 0; i < identified.length; i++) {\n      var fragment = identified[i];\n      if (typeof fragment !== \"string\") listed.push(fragment);\n    }\n\n    return listed;\n  } // transform objects to HTML tags\n\n\n  identified = identified.map(function (fragment) {\n    if (typeof fragment === \"string\") return fragment;\n    return url2tag(fragment, options);\n  }); // join and return\n\n  return separate_1.deSeparate(identified);\n}\n\nexports.default = default_1;\n\nfunction url2tag(fragment, options) {\n  var href = fragment.protocol + fragment.encoded;\n  var original = fragment.raw;\n\n  if (typeof options.truncate === \"number\") {\n    if (original.length > options.truncate) original = original.substring(0, options.truncate) + \"...\";\n  }\n\n  if (typeof options.truncate === \"object\") {\n    if (original.length > options.truncate[0] + options.truncate[1]) original = original.substr(0, options.truncate[0]) + \"...\" + original.substr(original.length - options.truncate[1]);\n  }\n\n  if (options.attributes === undefined) options.attributes = [];\n  return \"<a href=\\\"\" + href + \"\\\" \" + options.attributes.map(function (attribute) {\n    if (typeof attribute === 'function') {\n      var name = (attribute(fragment) || {}).name;\n      var value = (attribute(fragment) || {}).value;\n      if (name && !value) return \" name \";\n      if (name && value) return \" \" + name + \"=\\\"\" + value + \"\\\" \";\n    } else return \" \" + attribute.name + \"=\\\"\" + attribute.value + \"\\\" \";\n  }).join(\"\") + \">\" + original + \"</a>\";\n}","map":{"version":3,"sources":["/Users/tommysuh/Desktop/WebDeisgn/creative-project-adam-esther-tommy/node_modules/anchorme/dist-node/transform/transform.js"],"names":["Object","defineProperty","exports","value","separate_1","require","identify_1","separate_2","default_1","str","options","arr","separate","identified","default","exclude","index","length","element","raw","list","listed","i","fragment","push","map","url2tag","deSeparate","href","protocol","encoded","original","truncate","substring","substr","attributes","undefined","attribute","name","join"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar separate_1 = require(\"../separate/separate\");\nvar identify_1 = require(\"./identify\");\nvar separate_2 = require(\"../separate/separate\");\nfunction default_1(str, options) {\n    var arr = separate_2.separate(str);\n    var identified = identify_1.default(arr, options);\n    // custom filtering-out function\n    if (options.exclude) {\n        for (var index = 0; index < identified.length; index++) {\n            var element = identified[index];\n            if (typeof element === \"object\" && options.exclude(element))\n                identified[index] = element.raw;\n        }\n    }\n    // return the current list (with words being filtered out)\n    if (options.list) {\n        var listed = [];\n        for (var i = 0; i < identified.length; i++) {\n            var fragment = identified[i];\n            if (typeof fragment !== \"string\")\n                listed.push(fragment);\n        }\n        return listed;\n    }\n    // transform objects to HTML tags\n    identified = identified.map(function (fragment) {\n        if (typeof fragment === \"string\")\n            return fragment;\n        return url2tag(fragment, options);\n    });\n    // join and return\n    return separate_1.deSeparate(identified);\n}\nexports.default = default_1;\nfunction url2tag(fragment, options) {\n    var href = fragment.protocol + fragment.encoded;\n    var original = fragment.raw;\n    if (typeof options.truncate === \"number\") {\n        if (original.length > options.truncate)\n            original = original.substring(0, options.truncate) + \"...\";\n    }\n    if (typeof options.truncate === \"object\") {\n        if (original.length > (options.truncate[0] + options.truncate[1]))\n            original = original.substr(0, options.truncate[0]) + \"...\" + original.substr(original.length - options.truncate[1]);\n    }\n    if (options.attributes === undefined)\n        options.attributes = [];\n    return \"<a href=\\\"\" + href + \"\\\" \" + options.attributes.map(function (attribute) {\n        if (typeof attribute === 'function') {\n            var name = (attribute(fragment) || {}).name;\n            var value = (attribute(fragment) || {}).value;\n            if (name && !value)\n                return \" name \";\n            if (name && value)\n                return \" \" + name + \"=\\\"\" + value + \"\\\" \";\n        }\n        else\n            return \" \" + attribute.name + \"=\\\"\" + attribute.value + \"\\\" \";\n    }).join(\"\") + \">\" + original + \"</a>\";\n}\n"]},"metadata":{},"sourceType":"script"}