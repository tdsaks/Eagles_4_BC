{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar fix_1 = require(\"./fix\");\n/**\n *\n * Split the string with word separators\n * such as punctuation marks and spaces\n *\n**/\n\n\nfunction separate(input) {\n  var splitted = input.replace(/([\\s\\(\\)\\[\\]<>\"'])/g, \"\\0$1\\0\").replace(/([?;:,.!]+)(?=(\\0|$|\\s))/g, \"\\0$1\\0\").split(\"\\0\");\n  var fixed = fix_1.default(splitted);\n  return fixed;\n}\n\nexports.separate = separate;\n/**\n *\n * Join the resulting array into a string\n *\n**/\n\nfunction deSeparate(input) {\n  return input.join(\"\");\n}\n\nexports.deSeparate = deSeparate;","map":{"version":3,"sources":["/Users/tommysuh/Desktop/WebDeisgn/creative-project-adam-esther-tommy/node_modules/anchorme/dist-node/separate/separate.js"],"names":["Object","defineProperty","exports","value","fix_1","require","separate","input","splitted","replace","split","fixed","default","deSeparate","join"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;AACA;;;;;;;;AAMA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,MAAIC,QAAQ,GAAGD,KAAK,CACfE,OADU,CACF,qBADE,EACqB,QADrB,EAEVA,OAFU,CAEF,2BAFE,EAE2B,QAF3B,EAGVC,KAHU,CAGJ,IAHI,CAAf;AAIA,MAAIC,KAAK,GAAGP,KAAK,CAACQ,OAAN,CAAcJ,QAAd,CAAZ;AACA,SAAOG,KAAP;AACH;;AACDT,OAAO,CAACI,QAAR,GAAmBA,QAAnB;AACA;;;;;;AAKA,SAASO,UAAT,CAAoBN,KAApB,EAA2B;AACvB,SAAOA,KAAK,CAACO,IAAN,CAAW,EAAX,CAAP;AACH;;AACDZ,OAAO,CAACW,UAAR,GAAqBA,UAArB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fix_1 = require(\"./fix\");\n/**\n *\n * Split the string with word separators\n * such as punctuation marks and spaces\n *\n**/\nfunction separate(input) {\n    var splitted = input\n        .replace(/([\\s\\(\\)\\[\\]<>\"'])/g, \"\\0$1\\0\")\n        .replace(/([?;:,.!]+)(?=(\\0|$|\\s))/g, \"\\0$1\\0\")\n        .split(\"\\0\");\n    var fixed = fix_1.default(splitted);\n    return fixed;\n}\nexports.separate = separate;\n/**\n *\n * Join the resulting array into a string\n *\n**/\nfunction deSeparate(input) {\n    return input.join(\"\");\n}\nexports.deSeparate = deSeparate;\n"]},"metadata":{},"sourceType":"script"}