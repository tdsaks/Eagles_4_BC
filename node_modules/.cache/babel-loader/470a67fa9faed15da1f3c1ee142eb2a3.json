{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar util_1 = require(\"../util\");\n\nvar lists_1 = require(\"../lists\");\n\nvar pattern = /^(https?:\\/\\/|ftps?:\\/\\/)?([a-z0-9%\\-]+\\.){1,}([a-z0-9\\-]+)?(:(\\d{1,5}))?(\\/([a-z0-9\\-._~:\\/\\?#\\[\\]@!$&'\\(\\)\\*\\+,;=%]+)?)?$/i;\n\nfunction default_1(str) {\n  // general pattern recognition https://regex101.com/r/RgKTA4/2\n  var match = str.match(pattern);\n  if (match === null) return false; // validate TLD\n\n  if (typeof match[3] !== \"string\") return false;\n  if (lists_1.tlds.indexOf(match[3].toLowerCase()) === -1) return false; // validate port\n\n  if (match[5] && !util_1.isPort(match[5])) return false;\n  return true;\n}\n\nexports.default = default_1;","map":{"version":3,"sources":["/Users/tommysuh/Desktop/WebDeisgn/creative-project-adam-esther-tommy/node_modules/anchorme/dist-node/tests/url.js"],"names":["Object","defineProperty","exports","value","util_1","require","lists_1","pattern","default_1","str","match","tlds","indexOf","toLowerCase","isPort","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAArB;;AACA,IAAIE,OAAO,GAAG,8HAAd;;AACA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACpB;AACA,MAAIC,KAAK,GAAGD,GAAG,CAACC,KAAJ,CAAUH,OAAV,CAAZ;AACA,MAAIG,KAAK,KAAK,IAAd,EACI,OAAO,KAAP,CAJgB,CAKpB;;AACA,MAAI,OAAOA,KAAK,CAAC,CAAD,CAAZ,KAAoB,QAAxB,EACI,OAAO,KAAP;AACJ,MAAIJ,OAAO,CAACK,IAAR,CAAaC,OAAb,CAAqBF,KAAK,CAAC,CAAD,CAAL,CAASG,WAAT,EAArB,MAAiD,CAAC,CAAtD,EACI,OAAO,KAAP,CATgB,CAUpB;;AACA,MAAIH,KAAK,CAAC,CAAD,CAAL,IAAa,CAACN,MAAM,CAACU,MAAP,CAAcJ,KAAK,CAAC,CAAD,CAAnB,CAAlB,EACI,OAAO,KAAP;AACJ,SAAO,IAAP;AACH;;AACDR,OAAO,CAACa,OAAR,GAAkBP,SAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../util\");\nvar lists_1 = require(\"../lists\");\nvar pattern = /^(https?:\\/\\/|ftps?:\\/\\/)?([a-z0-9%\\-]+\\.){1,}([a-z0-9\\-]+)?(:(\\d{1,5}))?(\\/([a-z0-9\\-._~:\\/\\?#\\[\\]@!$&'\\(\\)\\*\\+,;=%]+)?)?$/i;\nfunction default_1(str) {\n    // general pattern recognition https://regex101.com/r/RgKTA4/2\n    var match = str.match(pattern);\n    if (match === null)\n        return false;\n    // validate TLD\n    if (typeof match[3] !== \"string\")\n        return false;\n    if (lists_1.tlds.indexOf(match[3].toLowerCase()) === -1)\n        return false;\n    // validate port\n    if (match[5] && (!util_1.isPort(match[5])))\n        return false;\n    return true;\n}\nexports.default = default_1;\n"]},"metadata":{},"sourceType":"script"}