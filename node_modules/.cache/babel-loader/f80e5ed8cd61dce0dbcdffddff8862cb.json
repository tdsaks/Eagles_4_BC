{"ast":null,"code":"/**\n *\n * @hack\n *\n * This is a dirty hack to fix URLs that have parenthesis and quotation marks in them\n * For example take this paragraph:\n *\n * \"\"\"\"\n * I visited this url: \"http://www.wikipedia.com/some_article(with_paranthesis)\"\n * and this URL: (http://www.wikipedia.com/some_article(with_paranthesis))\n * \"\"\"\"\n *\n * The quotation marks `'` `\"` and parenthesis `(` `)` `[` `]`\n * can be considered to be part of the URL, and as a\n * punctuation marks surrounding the URL.\n * While this hack works for the most part, it's quite dirty and\n * I may replace it with something better in the future.\n *\n *\n * Another fix is removing punctuation marks that may appear at the end of URL\n * Example:\n *\n * \"\"\"\"\n * I've visited google.com, facebook.com, and yahoo.com.\n * \"\"\"\"\n *\n * @todo: replace the following function with something cleaner.\n *\n *\n**/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction fixSeparators(arr, sep1, sep2) {\n  arr.forEach(function (bit, i) {\n    if (bit.indexOf(\".\") > -1 && !(arr[i - 1] === sep1 && arr[i + 1] === sep2) && (arr[i + 1] === sep1 || arr[i + 1] === sep2) // the one after it, is either sep1 or sep2\n    ) {\n        arr[i] = arr[i] + arr[i + 1];\n        if (typeof arr[i + 2] === \"string\") arr[i] = arr[i] + arr[i + 2];\n        if (typeof arr[i + 3] === \"string\") arr[i] = arr[i] + arr[i + 3];\n        if (typeof arr[i + 4] === \"string\") arr[i] = arr[i] + arr[i + 4];\n        arr.splice(i + 1, 4);\n        fixSeparators(arr, sep1, sep2);\n      }\n  });\n  return arr;\n}\n\nexports.fixSeparators = fixSeparators;\n\nfunction default_1(arr) {\n  arr = fixSeparators(arr, \"(\", \")\");\n  arr = fixSeparators(arr, \"[\", \"]\");\n  arr = fixSeparators(arr, \"\\\"\", \"\\\"\");\n  arr = fixSeparators(arr, \"'\", \"'\");\n  return arr;\n}\n\nexports.default = default_1;","map":{"version":3,"sources":["/Users/tommysuh/Desktop/WebDeisgn/creative-project-adam-esther-tommy/node_modules/anchorme/dist-node/separate/fix.js"],"names":["Object","defineProperty","exports","value","fixSeparators","arr","sep1","sep2","forEach","bit","i","indexOf","splice","default_1","default"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,SAASC,aAAT,CAAuBC,GAAvB,EAA4BC,IAA5B,EAAkCC,IAAlC,EAAwC;AACpCF,EAAAA,GAAG,CAACG,OAAJ,CAAY,UAAUC,GAAV,EAAeC,CAAf,EAAkB;AAC1B,QAAKD,GAAG,CAACE,OAAJ,CAAY,GAAZ,IAAmB,CAAC,CAArB,IACC,EAAEN,GAAG,CAACK,CAAC,GAAG,CAAL,CAAH,KAAeJ,IAAf,IAAuBD,GAAG,CAACK,CAAC,GAAG,CAAL,CAAH,KAAeH,IAAxC,CADD,KAECF,GAAG,CAACK,CAAC,GAAG,CAAL,CAAH,KAAeJ,IAAf,IAAuBD,GAAG,CAACK,CAAC,GAAG,CAAL,CAAH,KAAeH,IAFvC,CAAJ,CAEiD;AAFjD,MAGE;AACEF,QAAAA,GAAG,CAACK,CAAD,CAAH,GAASL,GAAG,CAACK,CAAD,CAAH,GAASL,GAAG,CAACK,CAAC,GAAG,CAAL,CAArB;AACA,YAAI,OAAOL,GAAG,CAACK,CAAC,GAAG,CAAL,CAAV,KAAsB,QAA1B,EACIL,GAAG,CAACK,CAAD,CAAH,GAASL,GAAG,CAACK,CAAD,CAAH,GAASL,GAAG,CAACK,CAAC,GAAG,CAAL,CAArB;AACJ,YAAI,OAAOL,GAAG,CAACK,CAAC,GAAG,CAAL,CAAV,KAAsB,QAA1B,EACIL,GAAG,CAACK,CAAD,CAAH,GAASL,GAAG,CAACK,CAAD,CAAH,GAASL,GAAG,CAACK,CAAC,GAAG,CAAL,CAArB;AACJ,YAAI,OAAOL,GAAG,CAACK,CAAC,GAAG,CAAL,CAAV,KAAsB,QAA1B,EACIL,GAAG,CAACK,CAAD,CAAH,GAASL,GAAG,CAACK,CAAD,CAAH,GAASL,GAAG,CAACK,CAAC,GAAG,CAAL,CAArB;AACJL,QAAAA,GAAG,CAACO,MAAJ,CAAWF,CAAC,GAAG,CAAf,EAAkB,CAAlB;AACAN,QAAAA,aAAa,CAACC,GAAD,EAAMC,IAAN,EAAYC,IAAZ,CAAb;AACH;AACJ,GAfD;AAgBA,SAAOF,GAAP;AACH;;AACDH,OAAO,CAACE,aAAR,GAAwBA,aAAxB;;AACA,SAASS,SAAT,CAAmBR,GAAnB,EAAwB;AACpBA,EAAAA,GAAG,GAAGD,aAAa,CAACC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAnB;AACAA,EAAAA,GAAG,GAAGD,aAAa,CAACC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAnB;AACAA,EAAAA,GAAG,GAAGD,aAAa,CAACC,GAAD,EAAM,IAAN,EAAY,IAAZ,CAAnB;AACAA,EAAAA,GAAG,GAAGD,aAAa,CAACC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAnB;AACA,SAAOA,GAAP;AACH;;AACDH,OAAO,CAACY,OAAR,GAAkBD,SAAlB","sourcesContent":["/**\n *\n * @hack\n *\n * This is a dirty hack to fix URLs that have parenthesis and quotation marks in them\n * For example take this paragraph:\n *\n * \"\"\"\"\n * I visited this url: \"http://www.wikipedia.com/some_article(with_paranthesis)\"\n * and this URL: (http://www.wikipedia.com/some_article(with_paranthesis))\n * \"\"\"\"\n *\n * The quotation marks `'` `\"` and parenthesis `(` `)` `[` `]`\n * can be considered to be part of the URL, and as a\n * punctuation marks surrounding the URL.\n * While this hack works for the most part, it's quite dirty and\n * I may replace it with something better in the future.\n *\n *\n * Another fix is removing punctuation marks that may appear at the end of URL\n * Example:\n *\n * \"\"\"\"\n * I've visited google.com, facebook.com, and yahoo.com.\n * \"\"\"\"\n *\n * @todo: replace the following function with something cleaner.\n *\n *\n**/\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction fixSeparators(arr, sep1, sep2) {\n    arr.forEach(function (bit, i) {\n        if ((bit.indexOf(\".\") > -1) &&\n            (!(arr[i - 1] === sep1 && arr[i + 1] === sep2)) &&\n            (arr[i + 1] === sep1 || arr[i + 1] === sep2) // the one after it, is either sep1 or sep2\n        ) {\n            arr[i] = arr[i] + arr[i + 1];\n            if (typeof arr[i + 2] === \"string\")\n                arr[i] = arr[i] + arr[i + 2];\n            if (typeof arr[i + 3] === \"string\")\n                arr[i] = arr[i] + arr[i + 3];\n            if (typeof arr[i + 4] === \"string\")\n                arr[i] = arr[i] + arr[i + 4];\n            arr.splice(i + 1, 4);\n            fixSeparators(arr, sep1, sep2);\n        }\n    });\n    return arr;\n}\nexports.fixSeparators = fixSeparators;\nfunction default_1(arr) {\n    arr = fixSeparators(arr, \"(\", \")\");\n    arr = fixSeparators(arr, \"[\", \"]\");\n    arr = fixSeparators(arr, \"\\\"\", \"\\\"\");\n    arr = fixSeparators(arr, \"'\", \"'\");\n    return arr;\n}\nexports.default = default_1;\n"]},"metadata":{},"sourceType":"script"}